## Sorting numbers

import PySimpleGUI as sg

def merge_sort (unsorted_list):
    if len(unsorted_list) <= 1:
        return unsorted_list
# Find Middle point and divide it  
    middle = len(unsorted_list) // 2
    left_list = unsorted_list[:middle]
    right_list = unsorted_list[middle:]
    left_list = merge_sort(left_list)
    right_list = merge_sort(right_list)
    return list(merge(left_list, right_list))

# Function to merge to sorted halves
def merge (left_half, right_half):
    res = []
    while len(left_half) != 0 and len(right_half) != 0:
        if left_half[0] < right_half[0]:
            res.append(left_half[0])
            left_half.remove(left_half[0])
        else:
            res.append(right_half[0])
            right_half.remove(right_half[0])
    if len(left_half) == 0:
        res = res + right_half
    else:
        res = res + left_half
    return res


unsorted_list = []

sg.theme('LightGreen')
layout = [  [sg.Text('Sorting code! ')],
            [sg.Text('Would you like for me to sort some numbers in order? ')],
            [sg.Yes(), sg.No()]  ]
# Creates a window for the layout
windows = sg.Window('Window 1', layout)
while True:
    event, values = windows.read()
    if event in (sg.WIN_CLOSED, 'No'):
        break
    if event in ('Yes'):
        n = sg.popup_get_text("Enter number of elements : ")
        n = int(n)
        for i in range(0, n):
            x = sg.popup_get_text('Enter one number: ')
            x = int(x)
            unsorted_list.append(x) 
        sg.popup(f'Numbers in order is {merge_sort(unsorted_list)}')
        break
windows.close()


